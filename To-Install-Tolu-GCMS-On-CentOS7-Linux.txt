Instructions to install and use Julie Tolu's GCMS application on CentOS Linux 7.

==============================================
Basic usage instructions.

To open a file browser,  click on the Applications menu in the top left of the menu bar, and click on the Terminal icon, which you can find either in Favourites or Accessories.

To open a command-line Terminal, click on the Applications menu in the top left of the menu bar, and click on the Terminal icon, which you can find either in Favourites or Utilities.

To open a command-line Terminal from within a specific folder in the file browser, right-click on the folder in the file-browser and select "Open in Terminal". I recommend doing this from the folder that you want to use as your session folder, and then starting R from there. This way any files generated by the session will be saved in the right folder.

After you've installed R and everything else (see instructions below), you can start R from a command-line Terminal by just typing R. You'll find it helpful to do this from whichever directory you want to use as a working directory, because Tolu's GCMS software often uses the command getwd(), which means "get working directory" to load and save files.

Once R is started, you will see the R prompt, which looks like this: >
You can type commands at the prompt.

To quit R, type q()


==============================================
Below is what I had to do to install and get it working on Linux.
You'll need to have an active internet connection for a lot of these commands.

Most of this is done from a command-line Terminal.

-------------------------
Source files:

netcdf_3.6.3.tar.gz downloaded from: ftp://ftp.unidata.ucar.edu/pub/netcdf/
R_2.15.2.tar.gz downloaded from: https://cran.r-project.org/src/base/R-2/
R package ncdf_1.6.9.tar.gz downloaded from: https://cran.r-project.org/src/contrib/Archive/ncdf/
R package signal_0.7-6.tar.gz downloaded from: https://cran.r-project.org/web/packages/signal/index.html

R package GCMS supplied by Tolu. She also supplied an ncdf R package, but it had been compiled for Windows so we couldn't use it. She also supplied a tcltk R package, but this usually comes with the default R installation, which is what we used.

Note: netcdf_3.6.3, R_2.15.2, and ncdf_1.6.9 are all old versions of these packages. This is necessary mostly because the GCMS code is written to depend on the ncdf R package, which is now defunct and replaced by ncdf4. Ncdf4 is not backwards compatible with ncdf, so we have to use the old libraries.

Info on ncdf3 and ncdf4 here:
https://cran.r-project.org/web/packages/ncdf4/index.html
http://cirrus.ucsd.edu/~pierce/ncdf/
http://cirrus.ucsd.edu/~pierce/ncdf/install_ncdf_v4.html



Installation steps:

--------------------------
1) Install netcdf-3.6.3:

Download netcdf version 3 from ftp://ftp.unidata.ucar.edu/pub/netcdf/
To install, extract it, and in a command-line terminal, nagivate into its root directory and follow the quick instructions in the INSTALL text file. Basically run:

./configure --enable-shared
make check
sudo make install 

( # to remove/undo, use:
make distclean
make clean 
)

--------------------------
2) Install necessary Linux libraries before installing R:

From a command-line Terminal, run:

sudo yum install readline-devel

yum grouplist hidden # this shows the list of all installed and available groups to see if "X Window System" is already installed, and if "X Window System" isn't already installed, run:
sudo yum groups mark install "X Window System"
sudo yum groups mark convert "X Window System"
sudo yum groupinstall "X Window System"

# this may need to be installed even if "X Window System" is already installed
sudo yum install libXt-devel 

If your Linux system doesn't have tcl/tk installed, you have to install it before compiling R if you want the R tcltk package to work, which is require for Tolu's GCMS package. I installed the devel versions of both tcl and tk, although I don't know if that's necessary. If you aren't sure if you already have tcl/tk installed, just run these anway:
sudo yum install tcl
sudo yum install tk
sudo yum install tcl-devel
sudo yum install tk-devel

--------------------------
3) Install R:

Download R_2.15.2.tar.gz from: https://cran.r-project.org/src/base/R-2/
Extract it in a folder where you'd like to have it installed.
Follow the instructions in the INSTALL file of the R-2.15.2 root directory. Basically, run:

./configure
make
make check

( # to remove/undo, use:
make distclean
make clean 
)

Now, it is not yet installed globally, but you can run it by entering the command bin/R if you are in the R-2.15.2 directory. Basically, supply the relative directory path to the R executable from whereever you currently are. 

To test if R is running, enter bin/R from the command prompt. To quit r, type q().

I generally like to make sure everything is working properly before installing R globally. To install it globally, which you can come back to do once everthing is set up and tested, run this from the R_2.15.2 directory:
sudo make install

--------------------------
4) Install R packages that aren't tricky to install:

To install GCMS, Copy the GCMS folder supplied by Tolu into the R-2.15.2/library folder.

Then install the R package signal_0.7-6.tar.gz (downloaded from: https://cran.r-project.org/web/packages/signal/index.html), by entering this in a command-line Terminal from the directory that contains the signal_0.7-6.tar.gz file (you may need to adjust the directory path of the R executable file as necessary):
R-2.15.2/bin/R CMD INSTALL signal_0.7-6.tar.gz

--------------------------
5) Install the ncdf R package:

I had to download an archived version of ncdf (ncdf_1.6.9.tar.gz) from 
https://cran.r-project.org/src/contrib/Archive/ncdf/ because the ncdf package supplied by Tolu was built for x86_64-w64-mingw32, and ncdf is no longer in the CRAN repository (has been replaced with ncdf4, which has a different API).

I then tried to install the ncdf package in R using:
R-2.15.2/bin/R CMD INSTALL ncdf_1.6.9.tar.gz

This failed because: "libnetcdf.so.4: cannot open shared object file: No such file or directory".
That file did indeed exist, and was located in /usr/local/lib. I needed to add /usr/local/lib to the search path as discussed here:
http://stackoverflow.com/questions/4743233/is-usr-local-lib-searched-for-shared-libraries

The way I ended up doing it was:
cd /etc
sudo gedit ld.so.conf  
# then add this on a NEW line in ld.so.conf: /usr/local/lib
# then, save and exit, then run:
sudo ldconfig -v   # to update the cache (-v just means verbose output)
# then cd back to your directory that contains the ncdf_1.6.9.tar.gz file, and re-ran the command:
R-2.15.2/bin/R CMD INSTALL ncdf_1.6.9.tar.gz

--------------------------
6) Test

Now that you've finished installing everything, before you install R globally, start R from whichever directory you have your test data saved in (you will need to supply the relative path the the R executable), and test it but following Tolu's instructions.

If it all works as expected, exit R, cd to the R-2.15.2 directory, and type this to install it globally, which will enable you to start R from anywhere by just typing R:
sudo make install





=============================================
These are some links that I found helpful while trouble-shooting the install process. You probably won't need them, but I didn't see any reason to delete them. 

http://stackoverflow.com/questions/16671073/setgraphicseventenv-not-supported-under-linux
http://stackoverflow.com/questions/23692236/is-it-possible-to-configure-r-graphics-event-handling-on-osx-with-rstudio
https://support.rstudio.com/hc/en-us/community/posts/200671697-Event-Handling-with-RStudio-getGraphicsEvent-

http://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/getGraphicsEvent.html
https://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/x11.html
https://www.rdocumentation.org/packages/grDevices/versions/3.3.2/topics/getGraphicsEvent

Info on setting X11 options:
http://r.789695.n4.nabble.com/Xll-options-td3725879.html
http://stackoverflow.com/questions/10777008/how-to-set-cairo-as-default-backend-for-x11-in-r
https://stat.ethz.ch/pipermail/r-help/2007-November/145132.html
https://stat.ethz.ch/pipermail/r-help/2008-November/179951.html
https://stat.ethz.ch/R-manual/R-devel/library/base/html/options.html
https://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/Devices.html
http://blog.revolutionanalytics.com/2009/01/10-tips-for-making-your-r-graphics-look-their-best.html
http://stackoverflow.com/questions/19226816/how-can-i-view-the-source-code-for-a-function



=============================================
Stuff that might be useful if you one day decide to try to install it on Windows. To me it sounds like more hassle than it's worth, with no guarantee of success:

R for Windows FAQ:
https://cran.r-project.org/bin/windows/base/rw-FAQ.html

R:
https://cran.r-project.org/
https://cran.r-project.org/bin/windows/ # links to all other pages
https://cran.r-project.org/bin/windows/base/ #resource page for first-time install
https://cran.r-project.org/bin/windows/base/old/ # previous versions of R
https://cran.r-project.org/bin/windows/base/old/2.15.2/
https://cran.r-project.org/bin/windows/base/old/2.15.2/README.R-2.15.2 # installing guide

Old library binaries:
https://cran.r-project.org/bin/windows/contrib/
https://cran.r-project.org/bin/windows/contrib/2.15/

To build R and R packages on Windows:
https://cran.r-project.org/bin/windows/Rtools/

Info on building R and ncdf/ncdf4 for Windows 7 64-bit:
http://cirrus.ucsd.edu/~pierce/ncdf/how_to_build_on_windows.html
Using different/old versions of R:
https://support.rstudio.com/hc/en-us/articles/200486138-Using-Different-Versions-of-R

------------------
netCDF-3.6.3 release notes:
http://www.unidata.ucar.edu/software/netcdf/release-notes-3.6.3.html
netCDF binaries:
http://www.unidata.ucar.edu/software/netcdf/binaries.html
netCDF downloads:
http://www.unidata.ucar.edu/downloads/netcdf/index.jsp

Installing info:
http://www.unidata.ucar.edu/software/netcdf/old_docs/docs_3_6_3/netcdf-install/
http://www.unidata.ucar.edu/software/netcdf/old_docs/docs_3_6_3/netcdf-install/Installing-the-DLL.html#Installing-the-DLL
http://www.unidata.ucar.edu/software/netcdf/old_docs/docs_3_6_3/netcdf-install/installing_002dbinaries.html#installing_002dbinaries


On communication between 64-bit and 32-bit processes (hopefully if they're all 32-bit it's all ok):
https://blog.mattmags.com/2007/06/30/accessing-32-bit-dlls-from-64-bit-code/
http://forums.codeguru.com/showthread.php?524483-How-to-load-dll-which-is-win32-into-x64-environment
http://stackoverflow.com/questions/2265023/load-32bit-dll-library-in-64bit-application
http://stackoverflow.com/questions/3439845/register-32-bit-com-dll-to-64-bit-windows-7

