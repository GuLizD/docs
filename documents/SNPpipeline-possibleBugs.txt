
-------------------------------------------
start.sh:

        do pooled call of args.sh in background (line 91<-- should it run in background? maybe should run before or after the singles, each with the full number of processors)

-------------------------------------------
ref_gen.sh:
parameters: $1 9number of cores)

-------------------------------------------
args.sh:
parameters: $1 ($datapoint for single, $name for pooled), $2 (name), $3 (1=single/2=pooled/3=both), $4 (singlep/combinedp), $5 (number of cores), $6 (params: 1=default, 0=paper, 3=custom), $7 (1=assemble, 0= non-assemble)

    (<-- the $2 parameter is never used)

-------------------------------------------
align.sh:
parameters: $1 (name/datapoint), $2 (number of cores), $3 (1=assemble, 0=non-assemble)


-------------------------------------------
align_all.sh:
parameters: $1 (name/datapoint), $2 (number of cores), $3 (1=assemble, 0=non-assemble)


-------------------------------------------
extract.sh:
parameters: $1 (name/datapoint), $2 (singlep/combinedp), $3 (1=single/2=pooled/3=both), $4 (params: 1=default, 0=paper, 3=custom)

    run samtools sort -o ./dataTemp/$path/$1_sorted.bam ./dataTemp/$path/$1.bam # this sorts bam (EXPLAINED:line 21,25,27<-- where does the $1_sorted variable come from? Should it be $1"_sorted"? - I think it's because $1, $2, etc are recognized as special positional parameters in bash)
    

-------------------------------------------
post_process.sh:
parameters: $1 (name/datapoint), $2 (1=single/2=pooled/3=both)

-------------------------------------------
gen_report.sh:
parameters: $1 (mafcut)

    calculate number of processors (line 5<--This is doing *2 to the number of processors, is this a bug?)
            
-------------------------------------------

-------------------------------------------

-------------------------------------------

-------------------------------------------

-------------------------------------------

-------------------------------------------
